'use strict'

const IPFS = require('ipfs')
const Log  = require('../src/log2')

const ipfs = new IPFS()
const log1 = new Log(ipfs, 'A')
const log2 = new Log(ipfs, 'B')
const log3 = new Log(ipfs, 'C')

log1.add('1')
  .then(() => log1.add('2'))
  .then((entry1) => {
    // console.log('Entry1:', entry1.hash, entry1.payload)
    // console.log('Entry1.next:', entry1.next) 
    // console.log()
    // console.log("ENTRIES--", log1.entries)
    // console.log("ITEMS--", log1.items)
    return log2.add('AA')
  })
  // .then(() => log2.add('AA'))
  .then(() => log2.add('BB'))
  .then(() => log3.add('  a'))
  .then(() => log3.add('  b'))
  .then(() => {
    // console.log("ITEMS2", log2.items)
    // console.log(log2.items)
    // console.log(log2._next)
    // console.log(log2._prev)
    // console.log(log2._heads)
    console.log("-- Join logs --")
    log1.join(log2)
      .then(() => log2.join(log1))
      .then(() => log2.join(log3))
      .then(() => log3.join(log2))
      .then(() => log3.add('  c'))
      .then(() => log3.add('  d'))
      // .then(() => console.log("ITEMS3", log3._next))
      .then(() => log2.join(log3))
      .then(() => {
        console.log("ITEMS1", log1.items)
        console.log("ITEMS2", log2.items)
        console.log("ITEMS3", log3.items)
      })
  })
  .catch((e) => console.error(e))
